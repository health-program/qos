<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paladin.qos.mapper.infectioncomplication.InfectionMapper">
	<resultMap id="BaseResultMap" type="com.paladin.qos.model.infectioncomplication.Infection">
		<id column="id" jdbcType="VARCHAR" property="id" />
        <!--医院的对象-->

		<result column="total_infection" jdbcType="VARCHAR" property="totalInfection" />
		<result column="operating_departments_infection" jdbcType="DOUBLE" property="operatingDepartmentsInfection" />
		<result column="operating_part_infection" jdbcType="DOUBLE" property="operatingPartInfection" />
		<result column="operating_risk_infection" jdbcType="DOUBLE" property="operatingRiskInfection" />
		<result column="lung_infection" jdbcType="DOUBLE" property="lungInfection" />
		<result column="new_born_infection" jdbcType="DOUBLE" property="newBornInfection" />
		<result column="selective_operations_infection" jdbcType="DOUBLE" property="selectiveOperationsInfection" />
		<result column="blood_infection" jdbcType="DOUBLE" property="bloodInfection" />
		<result column="intensive_care_unit_infection" jdbcType="DOUBLE" property="intensiveCareUnitInfection" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
        <result column="unit_id" jdbcType="VARCHAR" property="unitId" />
	</resultMap>

    <sql id="Base_Column_List">
        id,
        total_infection,
        operating_departments_infection,
        operating_part_infection,
        operating_risk_infection,
        lung_infection,
        new_born_infection,
        selective_operations_infection,
        blood_infection,
        intensive_care_unit_infection,
        create_time,
        create_user_id,
        update_time,
        update_user_id,
        unit_id
    </sql>


    <insert id="insert" parameterType="com.paladin.qos.model.infectioncomplication.Infection">
        insert into infection (
        id,
        total_infection,
        operating_departments_infection,
        operating_part_infection,
        operating_risk_infection,
        lung_infection,
        new_born_infection,
        selective_operations_infection,
        blood_infection,
        intensive_care_unit_infection,
        create_time,
        create_user_id,
        update_time,
        update_user_id,
        unit_id
        )
        values (#{id,jdbcType=VARCHAR},
        #{totalInfection,jdbcType=VARCHAR}, #{operatingDepartmentsInfection,jdbcType=DOUBLE}, #{operatingPartInfection,jdbcType=DOUBLE},
        #{operatingRiskInfection,jdbcType=DOUBLE}, #{lungInfection,jdbcType=DOUBLE}, #{newBornInfection,jdbcType=DOUBLE},#{selectiveOperationsInfection,jdbcType=DOUBLE},
        #{bloodInfection,jdbcType=DOUBLE}, #{intensiveCareUnitInfection,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP},
        #{createUserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=VARCHAR} ,#{unitId,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.paladin.qos.model.infectioncomplication.Infection">
        update infection
        set total_infection = #{totalInfection,jdbcType=VARCHAR},
        operating_departments_infection = #{operatingDepartmentsInfection,jdbcType=DOUBLE},
        operating_part_infection = #{operatingPartInfection,jdbcType=DOUBLE},
        operating_risk_infection =  #{operatingRiskInfection,jdbcType=DOUBLE},
        lung_infection = #{lungInfection,jdbcType=DOUBLE},
        new_born_infection = #{newBornInfection,jdbcType=DOUBLE},
        selective_operations_infection = #{selectiveOperationsInfection,jdbcType=DOUBLE},
        blood_infection =  #{bloodInfection,jdbcType=DOUBLE},
        intensive_care_unit_infection = #{intensiveCareUnitInfection,jdbcType=DOUBLE},
        create_time =  #{createTime,jdbcType=TIMESTAMP},
        create_user_id = #{createUserId,jdbcType=VARCHAR},
        update_time =  #{updateTime,jdbcType=TIMESTAMP},
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
        unit_id = #{unitId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="findInfectRecord" resultType="com.paladin.qos.service.infectioncomplication.vo.InfectionVO">
        SELECT i.id,i.`total_infection` AS totalInfection,i.`operating_departments_infection` AS operatingDepartmentsInfection,i.`operating_part_infection` AS operatingPartInfection,i.`operating_risk_infection` AS operatingRiskInfection,i.`create_time` as createTime,i.`unit_id` as unitId, s.account AS createUserId
        FROM
        infection as i
        LEFT JOIN sys_user s ON i.create_user_id=s.id
        WHERE 1=1
        <if test="unitIds !=null">
            AND unit_id IN
            <foreach collection="unitIds" index="index" item="item"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

        <if test="unitId !=null and unitId != '' ">
            AND unit_id=#{unitId}
        </if>
        <!--<if test="dateBegin != null and dateBegin!=''">-->
            <!--and create_time <![CDATA[ >= ]]>Date(#{dateBegin})-->
        <!--</if>-->
        <!--<if test="dateEnd != null and dateEnd!=''">-->
            <!--and create_time <![CDATA[ <= ]]>Date(#{dateEnd})-->
        <!--</if>-->

        ORDER BY i.create_time DESC
    </select>

    <select id="findRecentlyRecord" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM
        infection
        WHERE unit_id=#{unitId}
        ORDER BY create_time DESC
        limit 1
    </select>

    <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from infection
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteById" parameterType="String">
        delete from infection
         where id = #{id,jdbcType=VARCHAR}
    </delete>
    
    <select id="infectionCount" resultType="com.paladin.qos.service.infectioncomplication.vo.InfectionVO">
    select 
	sum(i.total_infection)as totalInfection,
	sum(i.operating_departments_infection)as operatingDepartmentsInfection,
	sum(i.operating_part_infection)as operatingPartInfection,
	sum(i.operating_risk_infection)as operatingRiskInfection,
	sum(i.lung_infection)as lungInfection,
	sum(i.new_born_infection)as newBornInfection,
	sum(i.selective_operations_infection)as selectiveOperationsInfection,
	sum(i.blood_infection)as bloodInfection,
	sum(i.intensive_care_unit_infection)as intensiveCareUnitInfection,
	i.unit_id as unitId
	from infection as i WHERE 1=1
	<if test="unitId !=null and unitId !='' ">
	 AND i.unit_id=#{unitId} 
	</if>
	<if test="date !=null and date !='' ">
	 AND i.create_time LIKE CONCAT(#{date},'%') 
	</if>
	GROUP BY i.unit_id;
    </select>
    
    <select id="infectionCountYaer" resultType="com.paladin.qos.service.infectioncomplication.vo.InfectionVO">
    SELECT
	sum(i.total_infection) AS totalInfection,
	sum(i.operating_departments_infection) AS operatingDepartmentsInfection,
	sum(i.operating_part_infection) AS operatingPartInfection,
	sum(i.operating_risk_infection) AS operatingRiskInfection,
	sum(i.lung_infection) AS lungInfection,
	sum(i.new_born_infection) AS newBornInfection,
	sum(i.selective_operations_infection) AS selectiveOperationsInfection,
	sum(i.blood_infection) AS bloodInfection,
	sum(i.intensive_care_unit_infection) AS intensiveCareUnitInfection,
	DATE_FORMAT(i.create_time,'%Y') AS date
	FROM
	infection AS i where 1=1 
	<if test="date !=null and date !='' ">
	 AND DATE_FORMAT(i.create_time,'%Y') = #{date}
	</if>
	<if test="unitId !=null and unitId !='' ">
	 AND i.unit_id=#{unitId}  
	</if>
	GROUP BY DATE_FORMAT(i.create_time,'%Y');
    </select>

</mapper>
